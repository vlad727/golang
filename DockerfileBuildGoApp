FROM golang:latest
ENV TZ=Europe/Moscow
WORKDIR /app
COPY . /app
RUN set -eux; \
    echo "Europe/Moscow" > /etc/timezone
RUN go build -o main .
RUN chmod u+x main
ENV PORT 8080
EXPOSE 8080
CMD ["./main"]
#ENTRYPOINT ["tail", "-f", "/dev/null"]


FROM golang:latest
ENV  TZ=Europe/Moscow
RUN set -eux; \
    echo "Europe/Moscow" > /etc/timezone \
    mkdir /app
ADD . /app/ 
WORKDIR /app
ENV PORT 8080
EXPOSE 8080
#RUN go build -o main .
CMD ["/app/main"]

### multi-stage ###
FROM golang:alpine AS builder
WORKDIR /build
ADD go.mod .
COPY . .
RUN go build -o hello hello.go

FROM alpine
WORKDIR /build
COPY --from=builder /build/hello /build/hello
CMD [". /hello"]

### my Dockerfile ###
FROM alpinelinux/golang AS builder
WORKDIR /app
COPY . /app
USER root
RUN env GOOS=linux GOARCH=amd64 \
    && go build -o webhook-app .  \
    && rm go.mod go.sum main.go

FROM alpine
WORKDIR /app
COPY --from=builder /app/webhook-app /app/webhook-app
RUN  chmod u+x webhook-app && mkdir /certs  /files
CMD ["./webhook-app"]

